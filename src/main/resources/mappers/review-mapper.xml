<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="ReviewMapper">
  		<resultMap type="Review" id="reviewResultMap">
  			<id property="reviewNo" column="REVIEW_NO"/>
  			<result property="storeNo" column="STORE_NO"/>
  			<result property="reviewWriter" column="REVIEW_WRITER"/>
  			<result property="reviewContent" column="REVIEW_CONTENT"/>
  			<result property="reviewFilename" column="REVIEW_FILENAME"/>
  			<result property="reviewFileRename" column="REVIEW_FILERENAME"/>
  			<result property="reviewFilepath" column="REVIEW_FILEPATH"/>
  			<result property="reviewCount" column="REVIEW_COUNT"/> 
  			<result property="starRating" column="STAR_RATING"/>
  			<result property="rCreateDate" column="R_CREATE_DATE"/>
  			<result property="rUpdateDate" column="R_UPDATE_DATE"/>
  			<result property="useYn" column="USE_YN"/>
  			<result property="storeName" column="STORE_NAME"/>
  			<result property="reviewHeart" column="REVIEW_HEART"/> 
  			<result property="heartCount" column="HEART_COUNT"/> 
  			
  		</resultMap>

  		
		<!-- 리뷰 등록 -->
  		<insert id="insertReview">
  			INSERT INTO REVIEW_TBL(REVIEW_NO, STORE_NO, REVIEW_WRITER,
			    REVIEW_CONTENT, REVIEW_FILENAME, REVIEW_FILERENAME,
			    REVIEW_FILEPATH, REVIEW_COUNT, STAR_RATING, R_CREATE_DATE , R_UPDATE_DATE, USE_YN)
			    VALUES(SEQ_REVIEW_NO.NEXTVAL, #{storeNo}, #{reviewWriter}, #{reviewContent}, #{reviewFilename}, 
			    #{reviewFileRename}, #{reviewFilepath} , 0,#{starRating}, SYSDATE, SYSDATE, 'Y')
  		</insert>
  		<!-- 추천 -->
  		<insert id="insertHeartCount">
  			INSERT INTO 
  				REVIEW_HEART (HEART_NO, USER_ID, REVIEW_NO)
    			VALUES (SEQ_HEART_NO.NEXTVAL, #{userId}, #{reviewNo})
  		</insert>
  		
  		<!-- 게시글 수정 -->
  		<update id="updateReview">
  			UPDATE REVIEW_TBL
  				SET REVIEW_CONTENT = #{reviewContent},
  				REVIEW_FILENAME = #{reviewFilename},
  				REVIEW_FILERENAME = #{reviewFileRename},
  				REVIEW_FILEPATH = #{reviewFilepath},
  				R_UPDATE_DATE = DEFAULT
  				WHERE REVIEW_NO = #{reviewNo}
  				
  				
  		</update>
  		
  		<!-- 전체게시글 조회 -->
  		<select id="selectAllReview" resultMap="reviewResultMap">
			SELECT R.*, (SELECT STORE_NAME FROM STORE_TBL WHERE STORE_NO = R.STORE_NO) STORE_NAME
			FROM REVIEW_TBL R
			WHERE USE_YN = 'Y' ORDER BY REVIEW_NO ASC
  		</select>
  		
  		<!--  리뷰 검색 -->
  		<select id="selectTotalCount" resultType="_int">
  			SELECT COUNT(*) FROM REVIEW_TBL
			<where>
				<if test="searchCondition.toString() == 'contents'">
					REVIEW_CONTENT LIKE '%'||#{searchValue}||'%'
				</if>
				<if test="searchCondition.toString() == 'writer'">
					REVIEW_WRITER LIKE '%'||#{searchValue}||'%'
				</if>
				<if test="searchCondition.toString() == 'all'">
					REVIEW_CONTENT LIKE '%'||#{searchValue}||'%'
					OR REVIEW_WRITER LIKE '%'||#{searchValue}||'%'
				</if>
				AND USE_YN = 'Y'
			</where>
  		</select>
  		
  		<select id="selectOneByNo" resultMap="reviewResultMap">
  			SELECT R.*,
  				(SELECT STORE_NAME FROM STORE_TBL WHERE STORE_NO = R.STORE_NO) STORE_NAME,
  				(SELECT COUNT (HEART_NO) FROM REVIEW_HEART WHERE REVIEW_NO = R.REVIEW_NO) REVIEW_HEART
  			FROM REVIEW_TBL R 
  			WHERE REVIEW_NO = #{reviewNo}
  		</select>
  		
		<select id="storeReviewPrint" resultMap="reviewResultMap">
  			SELECT R.*,
  				(SELECT STORE_NAME FROM STORE_TBL WHERE STORE_NO = R.STORE_NO) STORE_NAME,
  				(SELECT COUNT (HEART_NO) FROM REVIEW_HEART WHERE REVIEW_NO = R.REVIEW_NO) REVIEW_HEART
  			FROM REVIEW_TBL R 
  			WHERE STORE_NO = #{storeNo}
  		</select>
  		
  		<select id="selectAllByValue" resultMap="reviewResultMap">
  			SELECT * FROM REVIEW_TBL
			<where>
				<if test="searchCondition.toString() == 'content'">
					REVIEW_CONTENT LIKE '%'||#{searchValue}||'%'
				</if>
				<if test="searchCondition.toString() == 'writer'">
					REVIEW_WRITER LIKE '%'||#{searchValue}||'%'
				</if>
				<if test="searchCondition.toString() == 'all'">
					REVIEW_CONTENT LIKE '%'||#{searchValue}||'%'
					OR REVIEW_WRITER LIKE '%'||#{searchValue}||'%'
				</if>
					AND USE_YN = 'Y'
			</where>
  		</select>
  		<select id="selectHeartCount" resultType="_int">
  			SELECT COUNT (HEART_NO) FROM REVIEW_HEART WHERE REVIEW_NO = #{reviewNo}
  		</select>
		<select id="heartCountBest" resultMap="reviewResultMap">
			SELECT A.*,(SELECT STORE_NAME FROM STORE_TBL WHERE STORE_NO = A.STORE_NO) STORE_NAME
			FROM (SELECT R.*,
			    NVL((SELECT COUNT(REVIEW_NO)
			        FROM REVIEW_HEART
			        WHERE REVIEW_NO = R.REVIEW_NO
			        GROUP BY REVIEW_NO),0) HEART_COUNT
					FROM REVIEW_TBL R 
					ORDER BY HEART_COUNT DESC) A
			<![CDATA[WHERE ROWNUM <= 4]]>
		</select>
  		
  		<update id="updateCount">
  			UPDATE REVIEW_TBL 
  				SET REVIEW_COUNT = REVIEW_COUNT +1 
  				WHERE REVIEW_NO = #{reviewNo}
  		</update>
  		
  		<delete id="deleteReview">
  			DELETE FROM REVIEW_TBL 
  				WHERE REVIEW_NO = #{review.reviewNo}
  		</delete>
  		
  		
  </mapper>
  